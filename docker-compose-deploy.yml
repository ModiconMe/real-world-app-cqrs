version: '3'
services:
#  certbot:
#    image: certbot/certbot
#    depends_on:
#      - nginx-proxy
#    container_name: certbot
#    stdin_open: true
#    tty: true
#    volumes:
#      - ./conf/certbot:/etc/letsencrypt
#      - ./conf/certbot/certs:/var/www/certbot
#    command: certonly --webroot --webroot-path /var/www/certbot/ --dry-run --email rebeelsc@gmail.com --agree-tos --staging -d dev.local.ru

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      backend-app-network:
    volumes:
      - ./conf/nginx/nginx-back.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - backend-app

  backend-app:
    image: modiconme/real-world-app:latest
    networks:
      backend-app-network:
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_URL=${POSTGRES_URL}"
      - "JWT_SECRET=${JWT_SECRET}"
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - app-logs:/application/logs

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      backend-app-network:
    restart: unless-stopped
    volumes:
      - ./pgdata:/data/postgres

networks:
  backend-app-network:
    driver: bridge

volumes:
  app-logs: